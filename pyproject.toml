[project]
name = "pdf2zh-next"
version = "2.6.4"
description = "Latex PDF Translator"
authors = [
    { name = "awwaawwa", email = "aw@funstory.ai" },
    { name = "Byaidu", email = "byaidux@gmail.com" }
]
maintainers = [
    { name = "awwaawwa", email = "aw@funstory.ai" }
]
license = "AGPL-3.0"
readme = "README.md"
requires-python = ">=3.10,<3.14"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests",
    # for arm64 linux whells
    "pymupdf<1.25.3",
    "tqdm",
    "tenacity",
    "numpy",
    "ollama",
    "xinference-client",
    "deepl",
    "openai>=1.0.0",
    "azure-ai-translation-text<=1.0.1",
    # 5.36 has a bug, webui starts with a white screen
    "gradio<5.36",
    "tencentcloud-sdk-python-tmt",
    "gradio-pdf>=0.0.21",
    "peewee>=3.17.8",
    "fontTools",
    "babeldoc>=0.5.7,<0.6.0",
    "rich",
    "pydantic-settings>=2.8.1",
    "pydantic>=2.10.6",
    "httpx>=0.28.1",
    "sse-starlette>=2.3.3",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "legacy-cgi; python_version >= '3.13'",
    "chardet>=5.2.0",
    "gradio-i18n>=0.3.1",
    "pyyaml>=6.0.2",
    "gunicorn>=23.0.0",
    "tomlkit>=0.12.0",
    "psutil>=6.0.0",
]

[dependency-groups]
dev = [
    "pre-commit",
    "pytest",
    "build",
    "bumpver>=2024.1130",
    "ruff>=0.9.2",
    "markdown-callouts>=0.4.0",
    "markdown-include>=0.8.1",
    "mkdocs-git-authors-plugin>=0.9.5",
    "mkdocs-git-committers-plugin>=0.2.3",
    "mkdocs-git-revision-date-localized-plugin>=1.4.7",
    "mkdocs-material[recommended]>=9.6.4",
    "mkdocs-static-i18n>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/PDFMathTranslate/PDFMathTranslate-next"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
pdf2zh = "pdf2zh_next.main:cli"
pdf2zh2 = "pdf2zh_next.main:cli"
pdf2zh_next = "pdf2zh_next.main:cli"

[tool.flake8]
ignore = ["E203", "E261", "E501", "W503", "E741"]
max-line-length = 88



[bumpver]
current_version = "2.6.4"
version_pattern = "MAJOR.MINOR.PATCH[.PYTAGNUM]"

[bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"'
]
"pdf2zh_next/__init__.py" = [
    '__version__ = "{version}"'
]
"pdf2zh_next/const.py" = [
    '__version__ = "{version}"'
]
"pdf2zh_next/main.py" = [
    '__version__ = "{version}"'
]

[tool.ruff]
src = ["babeldoc"]
target-version = "py310"
show-fixes = true

[tool.ruff.format]
# Enable reformatting of code snippets in docstrings.
docstring-code-format = true

[tool.ruff.lint]
ignore = [
    "E203",   # 冒号前的空格
    "E261",   # 注释前至少两个空格
    "E501",   # 行太长
    "E741",   # 变量名歧义
    "F841",   # 未使用的变量
    "C901",   # 太复杂的函数
    "S101",   # use assert
    "SIM",    # flake8-simplify
    "ARG002", # unused argument
    "S110",   # `try`-`except`-`pass` detected, consider logging the exception
    "B024",   # abstract class without abstract methods
    "S112",   # `try`-`except`-`continue` detected, consider logging the exception
    "COM812", # missing-trailing-comma
    "S603",   # `subprocess` call: check for execution of untrusted input

]
select = [
    "E",   # pycodestyle 错误
    "F",   # Pyflakes
    "N",   # PEP8 命名
    "B",   # flake8-bugbear
    "I",   # isort
    "C",   # mccabe
    "UP",  # pyupgrade
    "S",   # flake8-bandit
    "A",   # flake8-builtins
    "COM", # flake8-commas
    "ARG", # flake8-unused-arguments
    "PTH", # 使用 pathlib
]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-annotations]
suppress-none-returning = true

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"

# 设置一些规则的特定配置
[tool.ruff.lint.mccabe]
max-complexity = 10 # 函数圈复杂度阈值

[tool.ruff.lint.per-file-ignores]
"pdf2zh_next/gui.py" = ["S104"] # 忽略命名规范
"tests/*" = ["S101"]            # 在测试文件中允许 assert
"**/__init__.py" = ["F401"]     # 允许未使用的导入
"docs/*" = ["A001"]
